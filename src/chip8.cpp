#include <chip8.hpp>
#include <fstream>

const uint8_t Chip8_fontset[80] = {
  0xF0, 0x90, 0x90, 0x90, 0xF0, // 0
  0x20, 0x60, 0x20, 0x20, 0x70, // 1
  0xF0, 0x10, 0xF0, 0x80, 0xF0, // 2
  0xF0, 0x10, 0xF0, 0x10, 0xF0, // 3
  0x90, 0x90, 0xF0, 0x10, 0x10, // 4
  0xF0, 0x80, 0xF0, 0x10, 0xF0, // 5
  0xF0, 0x80, 0xF0, 0x90, 0xF0, // 6
  0xF0, 0x10, 0x20, 0x40, 0x40, // 7
  0xF0, 0x90, 0xF0, 0x90, 0xF0, // 8
  0xF0, 0x90, 0xF0, 0x10, 0xF0, // 9
  0xF0, 0x90, 0xF0, 0x90, 0x90, // A
  0xE0, 0x90, 0xE0, 0x90, 0xE0, // B
  0xF0, 0x80, 0x80, 0x80, 0xF0, // C
  0xE0, 0x90, 0x90, 0x90, 0xE0, // D
  0xF0, 0x80, 0xF0, 0x80, 0xF0, // E
  0xF0, 0x80, 0xF0, 0x80, 0x80  // F
};

void Chip8::Initialize()
{
    pc = 0x200; //System expects application to be loaded at this memory location
    opcode = 0;
    I = 0;
    sp = 0;

    //Load fontset into memory starting at 0x50
    for(int i = 0; i < 80; ++i)
        memory[0x50 + i] = Chip8_fontset[i];
}

void Chip8::LoadROM(const char * filename)
{   
    //Open the file as a stream of binary and move the file pointer to the end
    std::ifstream rom(filename, std::ios::binary | std::ios::ate);

    if (rom.is_open())
    {
        //Get size of the file and allocate a buffer to hold its contents
        std::streampos size = rom.tellg();
        char* buffer = new char[size];

        //Go back to the beginning of the file and fill the buffer
        rom.seekg(0, std::ios::beg);
        rom.read(buffer, size);
        rom.close();

        //Load the ROM into CHIP-8 memory, starts at 0x200
        for(int i = 0; i < size; ++i)
            memory[0x200 + i] = buffer[i];

        delete[] buffer;
    }
}
